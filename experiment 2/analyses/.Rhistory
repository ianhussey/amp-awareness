total_rt = sum(trial_latency)) %>%
ungroup() %>%
group_by(session_id, block_consistency) %>%
dplyr::summarise(rrd_score = (accuracy_diff / total_rt) * 60000)
rrd_blackwhite_df <- blackwhite_df %>%
rename(block = block_consistency)
rrd_blackwhite_df <- blackwhite_df %>%
rename(block = block_consistency)
rrd_blackwhite_df <- blackwhite_df %>%
dplyr::rename(block = block_consistency) %>%
group_by(session_id, block_consistency) %>%
dplyr::summarise(accuracy_diff = 40 - sum(trial_error),
total_rt = sum(trial_latency)) %>%
ungroup() %>%
group_by(session_id, block_consistency) %>%
dplyr::summarise(rrd_score = (accuracy_diff / total_rt) * 60000)
rrd_blackwhite_df <- blackwhite_df %>%
dplyr::rename(block = block_consistency) %>%
group_by(session_id, block) %>%
dplyr::summarise(accuracy_diff = 40 - sum(trial_error),
total_rt = sum(trial_latency)) %>%
ungroup() %>%
group_by(session_id, block) %>%
dplyr::summarise(rrd_score = (accuracy_diff / total_rt) * 60000)
rrd_blackwhite_df <- blackwhite_df %>%
dplyr::rename(block = block_consistency) %>%
group_by(session_id, block) %>%
dplyr::summarise(accuracy_diff = 40 - sum(trial_error),
total_rt = sum(trial_latency)) %>%
ungroup() %>%
group_by(session_id, block) %>%
dplyr::summarise(rrd_score = (accuracy_diff / total_rt) * 60000)
rfd_blackwhite_df <- rrd_blackwhite_df %>%
spread(rrd_score, block)
rfd_blackwhite_df <- rrd_blackwhite_df %>%
spread(rrd_score, block) %>%
mutate(rfd_score = consistent - inconsistent)
rrd_blackwhite_df <- blackwhite_df %>%
dplyr::rename(block = block_consistency) %>%
group_by(session_id, block) %>%
dplyr::summarise(accuracy_diff = 40 - sum(trial_error),
total_rt = sum(trial_latency)) %>%
ungroup() %>%
group_by(session_id, block) %>%
dplyr::summarise(rrd_score = (accuracy_diff / total_rt) * 60000)
View(rrd_blackwhite_df)
rfd_blackwhite_df <- rrd_blackwhite_df %>%
spread(rrd_score, block)
rfd_blackwhite_df <- rrd_blackwhite_df %>%
spread(block, rrd_score) %>%
mutate(rfd_score = consistent - inconsistent)
View(rfd_blackwhite_df)
rfd_blackwhite_df <- rrd_blackwhite_df %>%
spread(block, rrd_score)
View(rfd_blackwhite_df)
rrd_blackwhite_df <- blackwhite_df %>%
dplyr::rename(block = block_consistency) %>%
group_by(session_id, block) %>%
dplyr::summarise(accuracy_diff = 40 - sum(trial_error),
total_rt = sum(trial_latency)) %>%
ungroup() %>%
group_by(session_id, block) %>%
dplyr::summarise(rrd_score = (accuracy_diff / total_rt) * 60000)
View(rrd_blackwhite_df)
levels(trial_level_df$block_name)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant") %>%
mutate(block_consistency =
ifelse(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant",
"consistent", "inconsistent"))
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant") %>%
mutate(block_consistency =
ifelse(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant",
"consistent", "inconsistent")) %>%
count(block_number)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant") %>%
mutate(block_consistency =
ifelse(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant",
"consistent", "inconsistent")) %>%
count(block_number)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant") %>%
mutate(block_consistency =
ifelse(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant",
"consistent", "inconsistent")) %>%
dplyr::count(block_number)
View(blackwhite_df)
trial_count <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
group_by(session_id) %>%
count(block_number)
trial_count <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
group_by(session_id) %>%
dplyr::count(block_number)
trial_count <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
group_by(session_id) %>%
dplyr::count(block_number)
View(trial_count)
trial_count <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
group_by(session_id, block_number) %>%
dplyr::count(block_number)
View(trial_count)
trial_count <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
group_by(session_id, block_number) %>%
dplyr::count(block_number) %>%
filter(n == 40)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
semi_join(trial_count) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant") %>%
mutate(block_consistency =
ifelse(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant",
"consistent", "inconsistent")) %>%
dplyr::count(block_number)
View(blackwhite_df)
View(blackwhite_df)
trial_count <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
group_by(session_id, block_number) %>%
dplyr::count(block_number) %>%
filter(n == 40)
View(trial_count)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
semi_join(trial_count)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects)
library(tidyverse)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
semi_join(trial_count)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
anti_join(passed_subjects)
blackwhite_df <- trial_level_df
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6)
passed_subjects <- summarised_df %>%
filter(complete_iat_data == TRUE,
exclude_iat == FALSE) %>%
select(session_id)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
semi_join(trial_count)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects)
trial_count <- blackwhite_df %>%
filter(block_number == 3 |
block_number == 6) %>%
group_by(session_id, block_number) %>%
dplyr::count(block_number)
View(trial_count)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant") %>%
mutate(block_consistency =
ifelse(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant",
"consistent", "inconsistent")) %>%
dplyr::count(block_number)
View(blackwhite_df)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant") %>%
mutate(block_consistency =
ifelse(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant",
"consistent", "inconsistent")) %>%
dplyr::count(block_number)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
dplyr::count(block_number)
View(blackwhite_df)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant")
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant")  %>%
dplyr::count(block_number)
View(blackwhite_df)
blackwhite_df <- trial_level_df %>%
filter(block_number == 4 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant")  %>%
dplyr::count(block_number)
View(blackwhite_df)
blackwhite_df <- trial_level_df %>%
filter(block_number == 2 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant")  %>%
dplyr::count(block_number)
View(blackwhite_df)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 5) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant")  %>%
dplyr::count(block_number)
View(blackwhite_df)
blackwhite_df <- trial_level_df %>%
filter(block_number == 3 |
block_number == 6) %>%
semi_join(passed_subjects) %>%
filter(block_pairing_definition == "Black People/Bad,White People/Good" |
block_pairing_definition == "Black People/Good,White People/Bad" |
block_pairing_definition == "Black People/Negative,White People/Positive" |
block_pairing_definition == "Black People/Pleasant,White People/Unpleasant" |
block_pairing_definition == "Black People/Positive,White People/Negative"  |
block_pairing_definition == "Black People/Unpleasant,White People/Pleasant")  %>%
dplyr::count(block_number)
View(blackwhite_df)
levels(trial_level_df$block_number)
levels(trial_level_df$block_number)
trial_level_df <- readRDS("trial_level_data.rds")
levels(trial_level_df$block_number)
trial_level_df <- readRDS("trial_level_data.rds") %>%
filter(block_number == "45596749 rows selected.")
View(trial_level_df)
trial_level_df <- read_csv("trial_level_data.csv")
trial_level_df <- read_csv("attitudes_2.0_subset_exploratory_iat_trial_data.csv")
levels(trial_level_df$block_number)
trial_level_df <- read.csv("attitudes_2.0_subset_exploratory_iat_trial_data.csv")
levels(trial_level_df$block_number)
# Import processed data
full_df           <- read.csv("../data/processed/full.csv")
summarised_df     <- read.csv("../data/processed/summarised.csv")
cumulative_df     <- read.csv("../data/processed/cumulative_long.csv")
# Import processed data
full_df           <- read.csv("../data/processed/full.csv")
summarised_df     <- read.csv("../data/processed/summarised.csv")
cumulative_df     <- read.csv("../data/processed/cumulative_long.csv")
# Load dependencies
library(tidyverse)
library(effsize)
# Temporary df
illustration_df <- cumulative_df %>%
group_by(subject) %>%
head(100) %>%
ungroup
# Plot
ggplot(illustration_df, aes(cumlatency, cumacc, color = blockcode)) +
geom_point() +
geom_path() +
geom_smooth(method = "lm") + # Delete this line to remove the regression lines
scale_color_viridis_d() +
labs(title = "Cumulative record: Subject 1", x = "Cumulative Latency", y = "Cumulative accuracy") + # Axis labels
theme_classic()
# t-test
t.test(summarised_df$con_slope, summarised_df$incon_slope, paired = TRUE)
# effect size
cohen.d(summarised_df$con_slope, summarised_df$incon_slope, paired = TRUE)
# effect size
cohen.d(summarised_df$con_slope, summarised_df$incon_slope)
# effect size
effsize::cohen.d(summarised_df$con_slope, summarised_df$incon_slope)
# t-test
t.test(summarised_df$con_slope, summarised_df$incon_slope, paired = TRUE)
temp <- full_df %>%
filter(window == "3") %>%
mutate(half = ifelse(trialnum %% 2 == 0, 1, 2)) %>%
group_by(subject, blockcode, half) %>%
summarise(mean = mean(latency)) %>%
spread(blockcode, mean) %>%
mutate(effect = ConBlock - InconBlock) %>%
select(subject, effect, half) %>%
spread(half, effect)
View(full_df)
temp <- full_df %>%
filter(window == "3") %>%
mutate(half = ifelse(trialnum %% 2 == 0, 1, 2)) %>%
group_by(subject, blockcode, half) %>%
dplyr::summarise(mean = mean(latency)) %>%
spread(blockcode, mean) %>%
mutate(effect = ConBlock - InconBlock) %>%
select(subject, effect, half) %>%
spread(half, effect)
r <- cor(temp$`1`, temp$`2`)
(2 * abs(r)) / (1 + abs(r))
ggplot(data = temp, aes(`1`, `2`)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "RT difference based on even trials",
y = "RT difference based on odd trials") +
theme_classic()
temp2 <- full_df %>%
filter(window == "3",
subject != "857299412",
blocknum == 2,
trialnum > 9) %>%
mutate(half = ifelse(trialnum > 25, 2, 1)) %>%
group_by(subject, half) %>%
summarise(mean = mean(latency))
t.test(mean ~ half, data = temp2)
temp <- full_df %>%
filter(window == "3") %>%
mutate(half = ifelse(trialnum %% 2 == 0, 1, 2)) %>%
group_by(subject, blockcode, half) %>%
dplyr::summarise(mean = mean(latency)) %>%
spread(blockcode, mean) %>%
mutate(effect = ConBlock - InconBlock) %>%
select(subject, effect, half) %>%
spread(half, effect)
temp <- full_df %>%
filter(window == "1.5") %>%
mutate(half = ifelse(trialnum %% 2 == 0, 1, 2)) %>%
group_by(subject, blockcode, half) %>%
dplyr::summarise(mean = mean(latency)) %>%
spread(blockcode, mean) %>%
mutate(effect = ConBlock - InconBlock) %>%
select(subject, effect, half) %>%
spread(half, effect)
r <- cor(temp$`1`, temp$`2`)
(2 * abs(r)) / (1 + abs(r))
ggplot(data = temp, aes(`1`, `2`)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "RT difference based on even trials",
y = "RT difference based on odd trials") +
theme_classic()
temp <- full_df %>%
filter(window == "3") %>%
mutate(half = ifelse(trialnum %% 2 == 0, 1, 2)) %>%
group_by(subject, blockcode, half) %>%
dplyr::summarise(mean = mean(latency)) %>%
spread(blockcode, mean) %>%
mutate(effect = ConBlock - InconBlock) %>%
select(subject, effect, half) %>%
spread(half, effect)
full_df %>%
mutate(window = as.factor(window)) %>%
ggplot(aes(latency, group = window, color = window)) +
geom_density() +
theme_classic()
full_df %>%
mutate(window = as.factor(window)) %>%
ggplot(aes(correct, group = window, color = window)) +
geom_density() +
theme_classic()
full_df %>%
mutate(window = as.factor(window)) %>%
ggplot(aes(latency, group = window, color = window)) +
geom_density() +
facet_wrap(~blockcode) +
theme_classic()
# Plot
ggplot(cumulative_df, aes(cumlatency, cumacc, color = blockcode)) +
geom_point() +
geom_path() +
geom_smooth(method = "lm") + # Delete this line to remove the regression lines
scale_color_viridis_d() +
labs(title = "Cumulative record: Subject 1", x = "Cumulative Latency", y = "Cumulative accuracy") + # Axis labels
theme_classic()
# Plot
ggplot(cumulative_df, aes(cumlatency, cumacc, color = blockcode)) +
geom_point() +
geom_path() +
geom_smooth(method = "lm") + # Delete this line to remove the regression lines
scale_color_viridis_d() +
labs(x = "Cumulative Latency", y = "Cumulative accuracy") + # Axis labels
theme_classic()
full_df %>%
mutate(window = as.factor(window)) %>%
ggplot(aes(latency, group = blockcode, color = blockcode)) +
geom_density() +
facet_wrap(~window) +
theme_classic()
full_df %>%
mutate(window = as.factor(window)) %>%
ggplot(aes(latency, group = blockcode, color = blockcode)) +
geom_density(adjust = .1) +
facet_wrap(~window) +
theme_classic()
full_df %>%
mutate(window = as.factor(window)) %>%
ggplot(aes(latency, group = blockcode, color = blockcode)) +
geom_density(adjust = .5) +
facet_wrap(~window) +
theme_classic()
