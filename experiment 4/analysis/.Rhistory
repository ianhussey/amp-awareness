# model
fit_h2a_2 <- lm(IA_AMP_effect_obama_trump ~ influence_rate_obama_trump,
data = task_level_data_exclusions)
# model
model_h2b_1 <- glmer(rating ~ influenced * prime_type + (1 | subject),
family = binomial(link = "logit"),
data = trial_level_posneg_ia_amp_data_exclusions)
# model
fit_h3a <- lm(abs(IA_AMP_effect_obama_trump) ~ influence_rate_positive_negative,
data = task_level_data_exclusions)
# model
fit_h3b <- lm(abs(IA_AMP_effect_positive_negative) ~ influence_rate_obama_trump,
data = task_level_data_exclusions)
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_positive_negative,
abs(IA_AMP_effect_obama_trump))) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Rate of influence in the positive-negative IA-AMP and politics IA-AMP effect size",
x = "Positive-negative IA-AMP influence rate",
y = "Politics IA-AMP effect size") +
theme_classic()
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_obama_trump,
abs(IA_AMP_effect_positive_negative))) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Rate of influence in the positive-negative IA-AMP and politics IA-AMP effect size",
x = "Positive-negative IA-AMP influence rate",
y = "Politics IA-AMP effect size") +
theme_classic()
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_obama_trump,
IA_AMP_effect_obama_trump)) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Proportion of influenced trials and positive-negative IA-AMP effect",
x = "Proportion of influenced trials\non the positive-negative IA-AMP",
y = "Positive-negative IA-AMP effect") +
theme_classic()
# results table
tab_model(fit_h2a_2, emph.p = FALSE, ci.hyphen = ", ")
# results table
tab_model(fit_h2a_2, emph.p = FALSE, ci.hyphen = ", ")
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_obama_trump,
IA_AMP_effect_obama_trump)) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Proportion of influenced trials and positive-negative IA-AMP effect",
x = "Proportion of influenced trials\non the positive-negative IA-AMP",
y = "Positive-negative IA-AMP effect") +
theme_classic()
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_positive_negative,
IA_AMP_effect_positive_negative)) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Proportion of influenced trials and positive-negative IA-AMP effect",
x = "Proportion of influenced trials\non the positive-negative IA-AMP",
y = "Positive-negative IA-AMP effect") +
theme_classic()
# model
fit_h2a_2 <- lm(IA_AMP_effect_obama_trump ~ influence_rate_obama_trump,
data = task_level_data_exclusions)
# model
fit_h2a_2 <- lm(abs(IA_AMP_effect_obama_trump) ~ influence_rate_obama_trump,
data = task_level_data_exclusions)
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_obama_trump,
IA_AMP_effect_obama_trump)) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Proportion of influenced trials and politics IA-AMP effect",
x = "Proportion of influenced trials\non the politics IA-AMP",
y = "Politics IA-AMP effect") +
theme_classic()
# results table
tab_model(fit_h2a_2, emph.p = FALSE, ci.hyphen = ", ")
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_obama_trump,
abs(IA_AMP_effect_obama_trump))) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Proportion of influenced trials and politics IA-AMP effect",
x = "Proportion of influenced trials\non the politics IA-AMP",
y = "Politics IA-AMP effect") +
theme_classic()
# results table
tab_model(fit_h2a_2, emph.p = FALSE, ci.hyphen = ", ")
H5_influenced_cleaned <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit
# test
t.test(IA_AMP_effect_obama_trump_influenced ~ party,
data = task_level_data_exclusions)
# Cohen's d
effsize::cohen.d(IA_AMP_effect_obama_trump_influenced ~ party,
data = task_level_data_exclusions)
fit_influenced <- task_level_data_exclusions %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
fit_influenced <- task_level_data_exclusions %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.conf = 0.95)
fit_influenced <- task_level_data_exclusions %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"))
View(task_level_data_exclusions)
fit_influenced <-
bootES(task_level_data_exclusions,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
?debugonce
debugonce(
fit_influenced <- task_level_data_exclusions %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
)
debugonce(
task_level_data_exclusions %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
)
test <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party)
View(test)
test <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit()
View(test)
test <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit() %>%
mutate(as.character(party)) %>%
as.factor(party)
test <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit() %>%
mutate(party = as.character(party)) %>%
mutate(party = as.factor(party))
test <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit() %>%
mutate(party = as.character(party)) %>%
mutate(party = as.factor(party))
test <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit() %>%
mutate(party = as.character(party))
test <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit() %>%
mutate(party = as.character(party))
View(test)
test <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit() %>%
mutate(party = as.character(party)) %>%
mutate(party = as.factor(party))
View(test)
fit_influenced <- test %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
refactored_influenced <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit() %>%
mutate(party = as.character(party)) %>%
mutate(party = as.factor(party)) # need to refactor party as it thought it had 3 levels
# test
t.test(IA_AMP_effect_obama_trump_influenced ~ party,
data = refactored_influenced)
refactored_influenced <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_influenced, party) %>%
na.omit() %>%
mutate(party = as.character(party)) %>%
mutate(party = as.factor(party)) # need to refactor party as it thought it had 3 levels
# test
t.test(IA_AMP_effect_obama_trump_influenced ~ party,
data = refactored_influenced)
# Cohen's d
effsize::cohen.d(IA_AMP_effect_obama_trump_influenced ~ party,
data = refactored_influenced)
# test
t.test(IA_AMP_effect_obama_trump_influenced ~ party,
data = refactored_influenced)
# Cohen's d
effsize::cohen.d(IA_AMP_effect_obama_trump_influenced ~ party,
data = refactored_influenced)
fit_influenced <- refactored_influenced %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
data.frame(cohens_d = round(fit_influenced$t0,        2),
se       = round(sd(fit_influenced$t),     2),
ci_lwr   = round(fit_influenced$bounds[1], 2),
ci_upr   = round(fit_influenced$bounds[2], 2))
refactored_uninfluenced <- task_level_data_exclusions %>%
select(IA_AMP_effect_obama_trump_uninfluenced, party) %>%
na.omit() %>%
mutate(party = as.character(party)) %>%
mutate(party = as.factor(party)) # need to refactor party as it thought it had 3 levels
# test
t.test(IA_AMP_effect_obama_trump_uninfluenced ~ party,
family = binomial,
data = refactored_uninfluenced)
# Cohen's d
effsize::cohen.d(IA_AMP_effect_obama_trump_uninfluenced ~ party,
data = refactored_uninfluenced)
fit_uninfluenced <- refactored_uninfluenced %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_uninfluenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
data.frame(cohens_d = round(fit_uninfluenced$t0,        2),
se       = round(sd(fit_uninfluenced$t),     2),
ci_lwr   = round(fit_uninfluenced$bounds[1], 2),
ci_upr   = round(fit_uninfluenced$bounds[2], 2))
# Cohen's d
effsize::cohen.d(IA_AMP_effect_obama_trump_influenced ~ party,
data = refactored_influenced)
fit_influenced <- refactored_influenced %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_influenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
data.frame(cohens_d = round(fit_influenced$t0,        2),
se       = round(sd(fit_influenced$t),     2),
ci_lwr   = round(fit_influenced$bounds[1], 2),
ci_upr   = round(fit_influenced$bounds[2], 2))
fit_uninfluenced <- refactored_uninfluenced %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_uninfluenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
fit_uninfluenced <- refactored_uninfluenced %>%
bootES(.,
R = 2000,
data.col = "IA_AMP_effect_obama_trump_uninfluenced",
group.col = "party",
contrast = c(A = "republican", B = "democrat"),
effect.type = "cohens.d",
ci.type = "bca",
ci.conf = 0.95)
data.frame(cohens_d = round(fit_uninfluenced$t0,        2),
se       = round(sd(fit_uninfluenced$t),     2),
ci_lwr   = round(fit_uninfluenced$bounds[1], 2),
ci_upr   = round(fit_uninfluenced$bounds[2], 2))
# get data
task_level_data <- read.csv("../data/processed/processed_data.csv")
trial_level_posneg_ia_amp_data <- read.csv("../data/processed/trial_level_ia_amp_positive_negative_data.csv") %>%
filter(party %in% c("democrat", "republican")) %>%
mutate(influenced = as.numeric(influenced))
trial_level_posneg_ia_amp_data <- read.csv("../data/processed/trial_level_ia_amp_positive_negative_data.csv") %>%
filter(party %in% c("democrat", "republican")) %>%
mutate(influenced = as.numeric(influenced))
# exclusions
task_level_data_exclusions <- task_level_data %>%
filter(self_exclusion_1 == "Yes, use my data" &
complete_data == TRUE &
party %in% c("democrat", "republican") &
!is.na(age) &
!is.na(gender) &
age >= 18 & age <= 65)
trial_level_politics_ia_amp_data_exclusions <- trial_level_politics_ia_amp_data %>%
filter(self_exclusion_1 == "Yes, use my data" &
complete_data == TRUE &
party %in% c("democrat", "republican") &
!is.na(age) &
!is.na(gender) &
age >= 18 & age <= 65)
trial_level_posneg_ia_amp_data_exclusions <- trial_level_posneg_ia_amp_data %>%
filter(self_exclusion_1 == "Yes, use my data" &
complete_data == TRUE &
party %in% c("democrat", "republican") &
!is.na(age) &
!is.na(gender) &
age >= 18 & age <= 65)
# fit model
model_m1 <- glmer(rating ~ prime_type + (1 | subject),
family = binomial(link = "logit"),
data = trial_level_posneg_ia_amp_data_exclusions)
# fit model
model_m1 <- glmer(rating ~ prime_type + (1 | subject),
family = binomial(link = "logit"),
data = trial_level_posneg_ia_amp_data_exclusions)
# plot
plot_model(model_m1, type = "pred", terms = c("prime_type"))
# results table
tab_model(model_m1, emph.p = FALSE, ci.hyphen = ", ")
View(task_level_data_exclusions)
task_level_data_exclusions %>%
group_by(party) %>%
summarise(politics_amp_effect_mean         = mean(IA_AMP_effect_obama_trump),
politics_amp_effect_sd           = sd(IA_AMP_effect_obama_trump),
politics_amp_awareness_rate_mean = mean(influence_rate_obama_trump),
politics_amp_awareness_rate_sd   = sd(influence_rate_obama_trump))
task_level_data_exclusions %>%
group_by(party) %>%
dplyr::summarise(politics_amp_effect_mean         = mean(IA_AMP_effect_obama_trump),
politics_amp_effect_sd           = sd(IA_AMP_effect_obama_trump),
politics_amp_awareness_rate_mean = mean(influence_rate_obama_trump),
politics_amp_awareness_rate_sd   = sd(influence_rate_obama_trump))
means_by_party %>%
tidy()
ummarise(politics_amp_effect_mean         = mean(IA_AMP_effect_obama_trump),
means_by_party <- task_level_data_exclusions %>%
group_by(party) %>%
dplyr::summarise(politics_amp_effect_mean         = mean(IA_AMP_effect_obama_trump),
politics_amp_effect_sd           = sd(IA_AMP_effect_obama_trump),
politics_amp_awareness_rate_mean = mean(influence_rate_obama_trump),
politics_amp_awareness_rate_sd   = sd(influence_rate_obama_trump))
means_by_party %>%
means_by_party <- task_level_data_exclusions %>%
group_by(party) %>%
dplyr::summarise(politics_amp_effect_mean         = mean(IA_AMP_effect_obama_trump),
politics_amp_effect_sd           = sd(IA_AMP_effect_obama_trump),
politics_amp_awareness_rate_mean = mean(influence_rate_obama_trump),
politics_amp_awareness_rate_sd   = sd(influence_rate_obama_trump))
means_by_party %>%
tidy()
means_by_party %>%
kable()
means_by_party
t.test(IA_AMP_effect_obama_trump ~ party,
data = task_level_data_exclusions)
t.test(influence_rate_obama_trump ~ party,
data = task_level_data_exclusions)
fit_1 <- lm(IA_AMP_effect_obama_trump ~ influence_rate_obama_trump * party,
data = task_level_data_exclusions)
plot_model(fit_1, type = "int")
tab_model(fit_!)
tab_model(fit_1)
t.test(influence_rate_obama_trump ~ party,
data = task_level_data_exclusions) # Should do Bayesian analysis to find evidence for the null
lm(influence_rate_obama_trump ~ party,
data = task_level_data_exclusions) # Should do Bayesian analysis to find evidence for the null
fit_1 <- lm(abs(IA_AMP_effect_obama_trump) ~ influence_rate_obama_trump * party,
data = task_level_data_exclusions)
plot_model(fit_1, type = "int")
tab_model(fit_1)
fit_1 <- lm(abs(IA_AMP_effect_obama_trump) ~ influence_rate_obama_trump * party,
data = task_level_data_exclusions)
plot_model(fit_1, type = "int")
plot_model(fit_1, type = "int")
tab_model(fit_1)
t.test(influence_rate_obama_trump ~ party,
data = task_level_data_exclusions) # Should do Bayesian analysis to find evidence for the null
fit_1 <- lm(abs(IA_AMP_effect_obama_trump) ~ influence_rate_obama_trump * party,
data = task_level_data_exclusions) # Does influence rate interact with party in predicting AMP                                                      scores?
plot_model(fit_1, type = "int")
plot_model(fit_1, type = "int")
tab_model(fit_1)
posneg_means_by_party <- task_level_data_exclusions %>%
group_by(party) %>%
dplyr::summarise(posneg_amp_effect_mean         = mean(IA_AMP_effect_positive_negative),
posneg_amp_effect_mean         = sd(IA_AMP_effect_obama_trump),
posneg_amp_awareness_rate_mean = mean(influence_rate_obama_trump),
posneg_amp_awareness_rate_sd   = sd(influence_rate_obama_trump))
posneg_means_by_party
posneg_means_by_party <- task_level_data_exclusions %>%
group_by(party) %>%
dplyr::summarise(posneg_amp_effect_mean         = mean(IA_AMP_effect_positive_negative),
posneg_amp_effect_sd         = sd(IA_AMP_effect_obama_trump),
posneg_amp_awareness_rate_mean = mean(influence_rate_obama_trump),
posneg_amp_awareness_rate_sd   = sd(influence_rate_obama_trump))
posneg_means_by_party <- task_level_data_exclusions %>%
group_by(party) %>%
dplyr::summarise(posneg_amp_effect_mean         = mean(IA_AMP_effect_positive_negative),
posneg_amp_effect_sd           = sd(IA_AMP_effect_obama_trump),
posneg_amp_awareness_rate_mean = mean(influence_rate_obama_trump),
posneg_amp_awareness_rate_sd   = sd(influence_rate_obama_trump))
posneg_means_by_party
posneg_means_by_party <- task_level_data_exclusions %>%
group_by(party) %>%
dplyr::summarise(posneg_amp_effect_mean         = mean(IA_AMP_effect_positive_negative),
posneg_amp_effect_sd           = sd(IA_AMP_effect_positive_negative),
posneg_amp_awareness_rate_mean = mean(influence_rate_positive_negative),
posneg_amp_awareness_rate_sd   = sd(influence_rate_positive_negative))
posneg_means_by_party
t.test(IA_AMP_effect_positive_negative ~ party,
data = task_level_data_exclusions)
t.test(influence_rate_positive_negative ~ party,
data = task_level_data_exclusions) # Should do Bayesian analysis to find evidence for the null
fit_1 <- lm(abs(IA_AMP_effect_obama_trump) ~ influence_rate_obama_trump * party,
data = task_level_data_exclusions) # Does influence rate interact with party in predicting AMP                                                      scores?
fit_1 <- lm(abs(IA_AMP_effect_positive_negative) ~ influence_rate_positive_negative * party,
data = task_level_data_exclusions) # Does influence rate interact with party in predicting AMP                                                      scores?
plot_model(fit_1, type = "int")
plot_model(fit_1, type = "int")
tab_model(fit_1)
posneg_means_by_party <- task_level_data %>%
group_by(party) %>%
dplyr::summarise(posneg_amp_effect_mean         = mean(IA_AMP_effect_positive_negative),
posneg_amp_effect_sd           = sd(IA_AMP_effect_positive_negative),
posneg_amp_awareness_rate_mean = mean(influence_rate_positive_negative),
posneg_amp_awareness_rate_sd   = sd(influence_rate_positive_negative))
posneg_means_by_party
data = task_level_data
t.test(IA_AMP_effect_positive_negative ~ party,
data = task_level_data)
t.test(influence_rate_positive_negative ~ party,
data = task_level_data_exclusions) # Should do Bayesian analysis to find evidence for the null
t.test(IA_AMP_effect_positive_negative ~ party,
data = task_level_data)
temp <- trial_level_posneg_ia_amp_data_exclusions %>%
mutate(trialnum = (rep(c(1:72), 206))) %>%
group_by(trialnum, party) %>%
dplyr::summarise(count = sum(influenced)) %>%
arrange(trialnum)
temp_posneg <- trial_level_posneg_ia_amp_data_exclusions %>%
mutate(trialnum = (rep(c(1:72), 206))) %>%
group_by(trialnum, party) %>%
dplyr::summarise(count = sum(influenced)) %>%
arrange(trialnum)
ggplot(data = temp_posneg, aes(trialnum, count, group = party, color = party)) +
geom_point() +
geom_path()
temp_pol <- trial_level_politics_ia_amp_data_exclusions %>%
mutate(trialnum = (rep(c(1:72), 206))) %>% # change 206 to be [total length of df / 72]
group_by(trialnum, party) %>%
dplyr::summarise(count = sum(influenced)) %>%
arrange(trialnum)
ggplot(data = temp_pol, aes(trialnum, count, group = party, color = party)) +
geom_point() +
geom_path()
dems_only <- task_level_data_exclusions %>%
filter(party == "democrat")
reps_only <- task_level_data_exclusions %>%
filter(party == "republican")
cor.test(dems_only$IA_AMP_effect_positive_negative,
dems_only$influence_rate_positive_negative)
cor.test(reps_only$IA_AMP_effect_positive_negative,
reps_only$influence_rate_positive_negative)
lm(IA_AMP_effect_positive_negative ~ influence_rate_positive_negative,
data = task_level_data_exclusions)
fit_3 <- lm(IA_AMP_effect_positive_negative ~ influence_rate_positive_negative,
data = task_level_data_exclusions)
plot_model(fit_3)
tab_model(fit_3)
cor.test(task_level_data_exclusions$IA_AMP_effect_positive_negative,
task_level_data_exclusions$influence_rate_positive_negative)
fit_3 <- cor(IA_AMP_effect_positive_negative ~ influence_rate_positive_negative,
data = task_level_data_exclusions)
tab_model(fit_3, show.std = T)
cor.test(task_level_data_exclusions$IA_AMP_effect_positive_negative,
task_level_data_exclusions$influence_rate_positive_negative)
fit_3 <- lm(IA_AMP_effect_positive_negative ~ influence_rate_positive_negative * party,
data = task_level_data_exclusions)
plot_model(fit_3)
tab_model(fit_3, show.std = T)
