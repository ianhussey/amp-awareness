`all`            = 7),
unintentionality_pn = dplyr::recode(as.character(unintentionality_pn),
`none`           = 1,
`a few`          = 2,
`less than half` = 3,
`about half`     = 4,
`more than half` = 5,
`most`           = 6,
`all`            = 7),
unintentionality_to = dplyr::recode(as.character(unintentionality_to),
`none`           = 1,
`a few`          = 2,
`less than half` = 3,
`about half`     = 4,
`more than half` = 5,
`most`           = 6,
`all`            = 7),
party = ifelse(politics %in% c("a little republican",
"somewhat republican",
"very republican"), "republican",
ifelse(politics %in% c("a little democratic",
"somewhat democratic",
"very democratic"), "democrat", "neither/moderate")))
politics_IA_AMP_cleaned <- politics_IA_AMP_df %>%
# reshape influence variable
mutate(influenced = as.numeric(as.character(lead(correct)))) %>%
# keep only test blocks and ratings trials
filter(!str_detect(prime_type, "intention_check"),
blockcode == "test") %>%
# mutate some vars
mutate(prime_type = ifelse(prime_type %in% c("prime_obama", "prime_positive"), "prime_type_A", "prime_type_B"),
subject = as.character(subject),
rating = as.numeric(as.character(correct))) %>%
# exclude participants without the right number of AMP trials
group_by(subject) %>%
filter(n() == 72) %>%
ungroup() %>%
select(subject, prime_type, rating, influenced) %>%
# exclude those who didn't have the right number of trials on the screener
mutate(subject = as.character(subject))
# score amp effect
politics_IA_AMP_effect <- politics_IA_AMP_cleaned %>%
group_by(subject, prime_type) %>%
summarize(amp_effect = mean(rating)) %>%
ungroup() %>%
spread(prime_type, amp_effect) %>%
mutate(IA_AMP_effect_obama_trump = round(prime_type_A - prime_type_B, 2)) %>%
select(subject, IA_AMP_effect_obama_trump)
# score amp effect for influenced trials
politics_IA_AMP_effect_influenced <- politics_IA_AMP_cleaned %>%
filter(influenced == TRUE) %>%
group_by(subject, prime_type) %>%
summarize(amp_effect = mean(rating)) %>%
ungroup() %>%
spread(prime_type, amp_effect) %>%
mutate(IA_AMP_effect_obama_trump_influenced = round(prime_type_A - prime_type_B, 2)) %>%
select(subject, IA_AMP_effect_obama_trump_influenced)
# score amp effect for uninfluenced trials
politics_IA_AMP_effect_uninfluenced <- politics_IA_AMP_cleaned %>%
filter(influenced == FALSE) %>%
group_by(subject, prime_type) %>%
summarize(amp_effect = mean(rating)) %>%
ungroup() %>%
spread(prime_type, amp_effect) %>%
mutate(IA_AMP_effect_obama_trump_uninfluenced = round(prime_type_A - prime_type_B, 2)) %>%
select(subject, IA_AMP_effect_obama_trump_uninfluenced)
# score influence rates
politics_IA_AMP_influence_rate <- politics_IA_AMP_cleaned %>%
group_by(subject) %>%
summarize(influence_rate_obama_trump = round(mean(influenced), 2)) %>%
ungroup()
politics_IA_AMP_data <- full_join(politics_IA_AMP_effect,
politics_IA_AMP_effect_influenced,
politics_IA_AMP_effect_uninfluenced,
politics_IA_AMP_influence_rate,
by = "subject")
# score amp effect for influenced trials
politics_IA_AMP_effect_influenced <- politics_IA_AMP_cleaned %>%
filter(influenced == TRUE) %>%
group_by(subject, prime_type) %>%
summarize(amp_effect = mean(rating)) %>%
ungroup() %>%
spread(prime_type, amp_effect) %>%
mutate(IA_AMP_effect_obama_trump_influenced = round(prime_type_A - prime_type_B, 2)) %>%
select(subject, IA_AMP_effect_obama_trump_influenced)
# score amp effect for uninfluenced trials
politics_IA_AMP_effect_uninfluenced <- politics_IA_AMP_cleaned %>%
filter(influenced == FALSE) %>%
group_by(subject, prime_type) %>%
summarize(amp_effect = mean(rating)) %>%
ungroup() %>%
spread(prime_type, amp_effect) %>%
mutate(IA_AMP_effect_obama_trump_uninfluenced = round(prime_type_A - prime_type_B, 2)) %>%
select(subject, IA_AMP_effect_obama_trump_uninfluenced)
# score influence rates
politics_IA_AMP_influence_rate <- politics_IA_AMP_cleaned %>%
group_by(subject) %>%
summarize(influence_rate_obama_trump = round(mean(influenced), 2)) %>%
ungroup()
politics_IA_AMP_data <- politics_IA_AMP_effect %>%
full_join(politics_IA_AMP_effect_influenced, by = "subject") %>%
full_join(politics_IA_AMP_effect_uninfluenced, by = "subject") %>%
full_join(politics_IA_AMP_influence_rate, by = "subject")
View(politics_IA_AMP_data)
posneg_IA_AMP_cleaned <- posneg_IA_AMP_df %>%
# reshape influence variable
mutate(influenced = as.numeric(as.character(lead(correct)))) %>%
# keep only test blocks and ratings trials
filter(!str_detect(prime_type, "intention_check"),
blockcode == "test") %>%
# mutate some vars
mutate(prime_type = ifelse(prime_type %in% c("prime_obama", "prime_positive"), "prime_type_A", "prime_type_B"),
subject = as.character(subject),
rating = as.numeric(as.character(correct))) %>%
# exclude participants without the right number of AMP trials
group_by(subject) %>%
filter(n() == 72) %>%
ungroup() %>%
select(subject, prime_type, rating, influenced) %>%
# exclude those who didn't have the right number of trials on the screener
mutate(subject = as.character(subject))
# score amp effect
posneg_IA_AMP_effect <- posneg_IA_AMP_cleaned %>%
group_by(subject, prime_type) %>%
summarize(amp_effect = mean(rating)) %>%
ungroup() %>%
spread(prime_type, amp_effect) %>%
mutate(IA_AMP_effect_positive_negative = round(prime_type_A - prime_type_B, 2)) %>%
select(subject, IA_AMP_effect_positive_negative)
# score influence rates
posneg_IA_AMP_influence_rate <- posneg_IA_AMP_cleaned %>%
group_by(subject) %>%
summarize(influence_rate_positive_negative = round(mean(influenced), 2)) %>%
ungroup()
posneg_IA_AMP_data <- full_join(posneg_IA_AMP_effect,
posneg_IA_AMP_influence_rate,
by = "subject")
complete_demographics_data <- demographics_data %>%
na.omit() %>%
distinct(subject)
complete_self_report_data <- self_report_data %>%
na.omit() %>%
distinct(subject)
complete_politics_IA_AMP_data <- politics_IA_AMP_data %>%
na.omit() %>%
distinct(subject)
complete_posneg_IA_AMP_data <- posneg_IA_AMP_data %>%
na.omit() %>%
distinct(subject)
complete_data <- complete_demographics_data %>%
semi_join(complete_self_report_data, by = "subject") %>%
semi_join(complete_politics_IA_AMP_data, by = "subject") %>%
semi_join(complete_posneg_IA_AMP_data, by = "subject") %>%
mutate(complete_data = TRUE)
# combine
processed_data <- demographics_data %>%
full_join(politics_IA_AMP_data, by = "subject") %>%
full_join(posneg_IA_AMP_data, by = "subject") %>%
full_join(self_report_data, by = "subject") %>%
full_join(complete_data, by = "subject") %>%
mutate(complete_data = ifelse(is.na(complete_data), FALSE, complete_data))
# long format politics IA AMP data
trial_level_politics_ia_amp_data <- processed_data %>%
right_join(politics_IA_AMP_df, by = "subject") %>%
dplyr::select(subject, prime_type, rating, influenced, self_exclusion_1, complete_data)
# long format posneg IA AMP data
trial_level_posneg_ia_amp_data <- processed_data %>%
right_join(posneg_IA_AMP_df, by = "subject") %>%
dplyr::select(subject, prime_type, rating, influenced, self_exclusion_1, complete_data)
# write to disk
write_csv(processed_data, "processed/processed_data.csv")
write_csv(trial_level_politics_ia_amp_data, "processed/trial_level_politics_ia_amp_data.csv")
write_csv(trial_level_posneg_ia_amp_data, "processed/trial_level_posneg_ia_amp_data.csv")
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
cache = TRUE,
echo = FALSE)
# dependencies
library(tidyverse)
library(lme4)
library(sjPlot)
library(effects)
library(DescTools)
library(Rmisc)
library(effsize)
library(psych)
library(broom)
library(kableExtra)
# devtools::install_github("ianhussey/timesavers")
library(timesavers)  # for round_df()
# functions
## Logistic model performance: probability of superiority
ruscios_A <- function(variable, group, data, value1 = 1, value2 = 0) {
# Ensure data is a data frame (e.g., not a tbl_data)
data <- as.data.frame(data)
# Select the observations for group 1
x <- data[data[[group]] == value1, variable]
# Select the observations for group 2
y <- data[data[[group]] == value2, variable]
# Matrix with difference between XY for all pairs (Guillaume Rousselet's suggestion)
m <- outer(x, y, FUN = "-")
# Convert to booleans; count ties as half true.
m <- ifelse(m == 0, 0.5, m > 0)
# Return proportion of TRUEs
ruscios_A <- round(mean(m), 3)
return(as.numeric(ruscios_A))
}
# # version with CIs - computationally intensive
# ruscios_A_boot <- function(data, variable, group, value1 = 1, value2 = 0, B = 1000) {
#   require(tidyverse)
#   require(broom)
#   ruscios_A_results <- data %>%
#     ruscios_A(variable = variable,
#               group = group,
#               value1 = value1,
#               value2 = value2,
#               data = .)
#
#   ruscios_A_boot_results <- data %>%
#     broom::bootstrap(B) %>%
#     do(broom::tidy(ruscios_A(variable = variable,
#                              group = group,
#                              value1 = value1,
#                              value2 = value2,
#                              data = .))) %>%
#     ungroup() %>%
#     dplyr::summarize(AUC_ci_lwr = round(quantile(x, 0.025, na.rm = TRUE), 3),
#                      AUC_ci_upr = round(quantile(x, 0.975, na.rm = TRUE), 3)) %>%
#     mutate(AUC_estimate = ruscios_A_results)
#
#   return(ruscios_A_boot_results)
# }
# get data
task_level_data <- read.csv("../data/processed/processed_data.csv")
trial_level_politics_ia_amp_data <- read.csv("../data/processed/trial_level_politics_ia_amp_data.csv") %>%
mutate(influenced = recode(influenced,
`0` = "no",
`1` = "yes"),
influenced = as.numeric(influenced))
trial_level_posneg_ia_amp_data <- read.csv("../data/processed/trial_level_posneg_ia_amp_data.csv") %>%
mutate(influenced = recode(influenced,
`0` = "no",
`1` = "yes"),
influenced = as.numeric(influenced))
# exclusions
task_level_data_exclusions <- task_level_data %>%
filter(self_exclusion_1 == "Yes, use my data" & complete_data == TRUE)
trial_level_politics_ia_amp_data_exclusions <- trial_level_politics_ia_amp_data %>%
filter(self_exclusion_1 == "Yes, use my data" & complete_data == TRUE)
trial_level_posneg_ia_amp_data_exclusions <- trial_level_posneg_ia_amp_data %>%
filter(self_exclusion_1 == "Yes, use my data" & complete_data == TRUE)
# Gender
task_level_data_exclusions %>%
mutate(gender = tolower(gender)) %>%
dplyr::count(gender)
# Age mean and SD
task_level_data_exclusions %>%
mutate(age = as.numeric(as.character(age))) %>%
dplyr::summarise("age (mean)" = mean(age, na.rm = TRUE),
"age (standard deviation)" = sd(age, na.rm = TRUE)) %>%
round_df(2)
# fit model
model_m1 <- glmer(rating ~ prime_type + (1 | subject),
family = binomial(link = "logit"),
data = trial_level_posneg_ia_amp_data_exclusions)
# plot
plot_model(model_m1, type = "pred", terms = c("prime_type"))
# results table
tab_model(model_m1, emph.p = FALSE, ci.hyphen = ", ")
# bootstrap estimates and CIs for key parameters
# apply fixef() to the output of each boot to get fixed effects, save only this to the data frame
model_m1_boot <- bootMer(model_m1,
FUN = fixef,
nsim = 1000,
parallel = "multicore")
# model
model_h1a <- glmer(rating ~ influenced * prime_type + (1 | subject),
family = binomial(link = "logit"),
data = trial_level_politics_ia_amp_data_exclusions)
# plot
plot_model(model_h1a, type = "pred", terms = c("influenced", "prime_type"))
# results table
tab_model(model_h1a, emph.p = FALSE, ci.hyphen = ", ")
# model
fit_h1b <- lm(abs(IA_AMP_effect_obama_trump) ~ influence_rate_obama_trump,
data = task_level_data_exclusions)
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_obama_trump,
abs(IA_AMP_effect_obama_trump))) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Proportion of influenced trials and politics IA-AMP effect",
x = "Proportion of influenced trials\non the politics IA-AMP",
y = "Absolute politics IA-AMP effect") +
theme_classic()
# results table
tab_model(fit_h1b, emph.p = FALSE, ci.hyphen = ", ")
# model
model_h2a <- glmer(rating ~ influenced * prime_type + (1 | subject),
family = binomial(link = "logit"),
data = trial_level_posneg_ia_amp_data_exclusions)
# plot
plot_model(model_h2a, type = "pred", terms = c("influenced", "prime_type"))
# results table
tab_model(model_h2a, emph.p = FALSE, ci.hyphen = ", ")
# model
fit_h2b <- lm(IA_AMP_effect_positive_negative ~ influence_rate_positive_negative,
data = task_level_data_exclusions)
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_positive_negative,
IA_AMP_effect_positive_negative)) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Proportion of influenced trials and positive-negative IA-AMP effect",
x = "Proportion of influenced trials\non the positive-negative IA-AMP",
y = "Positive-negative IA-AMP effect") +
theme_classic()
# results table
tab_model(fit_h1b, emph.p = FALSE, ci.hyphen = ", ")
# model
fit_h3 <- lm(abs(IA_AMP_effect_obama_trump) ~ influence_rate_positive_negative,
data = task_level_data_exclusions)
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_positive_negative,
IA_AMP_effect_obama_trump)) +
geom_jitter(alpha = 0.3) +
geom_rug(position = "jitter") +
geom_smooth(method = lm) +
labs(title = "Rate of influence and Standard AMP effect size",
x = "Rate of influence",
y = "Standard AMP effect size") +
theme_classic()
# table
tab_model(fit_h3, emph.p = FALSE, ci.hyphen = ", ")
# test
cor.test(task_level_data_exclusions$influence_rate_obama_trump,
task_level_data_exclusions$influence_rate_positive_negative,
paired = TRUE)
# plot
ggplot(task_level_data_exclusions, aes(influence_rate_obama_trump, influence_rate_positive_negative)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Influence rate in\npolitics IA-AMP", y = "Influence rate in\npositive-negative IA-AMP") +
theme_classic() +
ylim(0,1) +
xlim(0,1)
# test
cor.test(task_level_data_exclusions$influence_rate_obama_trump,
task_level_data_exclusions$influence_rate_positive_negative,
paired = TRUE)
# test
x <- cor.test(task_level_data_exclusions$influence_rate_obama_trump,
task_level_data_exclusions$influence_rate_positive_negative,
paired = TRUE)
x
x$estimate
# test
x <- cor.test(task_level_data_exclusions$influence_rate_obama_trump,
task_level_data_exclusions$influence_rate_positive_negative,
paired = TRUE)$estimate
x
task_level_data_exclusions %>%
broom::bootstrap(10) %>%
do(cor.test(task_level_data_exclusions$influence_rate_obama_trump,
task_level_data_exclusions$influence_rate_positive_negative,
paired = TRUE)$estimate)
task_level_data_exclusions %>%
broom::bootstrap(10) %>%
do(cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate)
task_level_data_exclusions %>%
broom::bootstrap(10) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate)
help("Deprecated")
task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate)
x <- task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate)
View(x)
x <- task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate) %>%
dplyr::summarize(r_ci_lwr = round(quantile(r, 0.025, na.rm = TRUE), 3),
r_ci_upr = round(quantile(r, 0.975, na.rm = TRUE), 3))
x <- task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate) %>%
ungroup() %>%
dplyr::summarize(r_ci_lwr = round(quantile(r, 0.025, na.rm = TRUE), 3),
r_ci_upr = round(quantile(r, 0.975, na.rm = TRUE), 3))
task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate) %>%
ungroup()
task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate)
x <- task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = as.numeric(cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate))
View(x)
x <- task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate) %>%
mutate(r = as.numeric(r))
View(x)
x <- task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate) %>%
mutate(r = as.numeric(r)) %>%
dplyr::summarize(r_ci_lwr = round(quantile(r, 0.025, na.rm = TRUE), 3),
r_ci_upr = round(quantile(r, 0.975, na.rm = TRUE), 3))
x <- task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate) %>%
ungroup() %>%
mutate(r = as.numeric(r)) %>%
dplyr::summarize(r_ci_lwr = round(quantile(r, 0.025, na.rm = TRUE), 3),
r_ci_upr = round(quantile(r, 0.975, na.rm = TRUE), 3))
x <- task_level_data_exclusions %>%
broom::bootstrap(1000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate) %>%
ungroup() %>%
mutate(r = as.numeric(r)) %>%
dplyr::summarize(r_median = round(quantile(r, 0.500, na.rm = TRUE), 3),
r_ci_lwr = round(quantile(r, 0.025, na.rm = TRUE), 3),
r_ci_upr = round(quantile(r, 0.975, na.rm = TRUE), 3))
# test
cor.test(task_level_data_exclusions$influence_rate_obama_trump,
task_level_data_exclusions$influence_rate_positive_negative,
paired = TRUE)
# test
cor.test(task_level_data_exclusions$influence_rate_obama_trump,
task_level_data_exclusions$influence_rate_positive_negative,
paired = TRUE)
# bootstrap estimates
task_level_data_exclusions %>%
broom::bootstrap(2000) %>%
do(r = cor.test(.$influence_rate_obama_trump,
.$influence_rate_positive_negative,
paired = TRUE)$estimate) %>%
ungroup() %>%
mutate(r = as.numeric(r)) %>%
dplyr::summarize(r_median = round(quantile(r, 0.500, na.rm = TRUE), 3),
r_ci_lwr = round(quantile(r, 0.025, na.rm = TRUE), 3),
r_ci_upr = round(quantile(r, 0.975, na.rm = TRUE), 3))
# test
cor.test(task_level_data_exclusions$influence_rate_obama_trump,
task_level_data_exclusions$influence_rate_positive_negative,
paired = TRUE) %>% tidy()
# plot
ggplot(task_level_data_exclusions,
aes(influence_rate_obama_trump, influence_rate_positive_negative)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Influence rate in\npolitics IA-AMP", y = "Influence rate in\npositive-negative IA-AMP") +
theme_classic() +
ylim(0,1) +
xlim(0,1)
View(task_level_data_exclusions)
# test
t.test(IA_AMP_effect_obama_trump_influenced ~ party,
family = binomial,
data = task_level_data_exclusions)
# get data
task_level_data <- read.csv("../data/processed/processed_data.csv") %>%
filter(party %in% c("democrat", "republican"))
task_level_data <- read.csv("../data/processed/processed_data.csv")
# get data
task_level_data <- read.csv("../data/processed/processed_data.csv") %>%
filter(party %in% c("democrat", "republican"))
trial_level_politics_ia_amp_data <- read.csv("../data/processed/trial_level_politics_ia_amp_data.csv") %>%
filter(party %in% c("democrat", "republican")) %>%
mutate(influenced = recode(influenced,
`0` = "no",
`1` = "yes"),
influenced = as.numeric(influenced))
trial_level_posneg_ia_amp_data <- read.csv("../data/processed/trial_level_posneg_ia_amp_data.csv") %>%
filter(party %in% c("democrat", "republican")) %>%
mutate(influenced = recode(influenced,
`0` = "no",
`1` = "yes"),
influenced = as.numeric(influenced))
